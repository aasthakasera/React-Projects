{"ast":null,"code":"var _jsxFileName = \"/Users/aastha/Desktop/React/mastermind/src/solution.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Solution = props => {\n  let solutionPegs = [];\n  let solutionClass = '';\n  const isHidden = props.defeat && !props.victory ? '' : ' hidden';\n  const playAgain = !props.defeat && props.victory ? '' : ' hidden';\n\n  for (let i = 0; i < props.code.length; i++) {\n    solutionClass = props.code[i];\n    solutionPegs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'color-holder ' + solutionClass\n    }, 's_' + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solution colors\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: isHidden,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Solution:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), solutionPegs]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: playAgain,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: props.newGame,\n        children: \" Play Again?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Solution;\nexport default Solution;\n\nvar _c;\n\n$RefreshReg$(_c, \"Solution\");","map":{"version":3,"sources":["/Users/aastha/Desktop/React/mastermind/src/solution.js"],"names":["React","Solution","props","solutionPegs","solutionClass","isHidden","defeat","victory","playAgain","i","code","length","push","newGame"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAIH,KAAK,CAACI,MAAN,IAAgB,CAACJ,KAAK,CAACK,OAAxB,GAAmC,EAAnC,GAAwC,SAAzD;AACA,QAAMC,SAAS,GAAI,CAACN,KAAK,CAACI,MAAP,IAAiBJ,KAAK,CAACK,OAAxB,GAAmC,EAAnC,GAAwC,SAA1D;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACQ,IAAN,CAAWC,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;AAC1CL,IAAAA,aAAa,GAAGF,KAAK,CAACQ,IAAN,CAAWD,CAAX,CAAhB;AACAN,IAAAA,YAAY,CAACS,IAAb,eACE;AACE,MAAA,SAAS,EAAE,kBAAkBR;AAD/B,OAEO,OAAOK,CAFd;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEJ,QAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEK,SAAhB;AAAA,6BACE;AAAG,QAAA,OAAO,EAAEN,KAAK,CAACW,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAxBD;;KAAMZ,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import React from 'react';\n\nconst Solution = (props) => {\n  let solutionPegs = []\n  let solutionClass = ''\n  const isHidden = (props.defeat && !props.victory) ? '' : ' hidden'\n  const playAgain = (!props.defeat && props.victory) ? '' : ' hidden' \n  for (let i = 0; i < props.code.length; i++) {\n    solutionClass = props.code[i]\n    solutionPegs.push(\n      <div\n        className={'color-holder ' + solutionClass}\n        key={'s_' + i}>\n      </div>)\n  }\n  return (\n    <div className='solution colors'>\n      <div className={isHidden}>\n        <p>Solution:</p>\n        {solutionPegs}\n      </div>\n      <div className={playAgain}>\n        <a onClick={props.newGame}> Play Again?</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Solution;"]},"metadata":{},"sourceType":"module"}