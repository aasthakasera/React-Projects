{"ast":null,"code":"var _jsxFileName = \"/Users/aastha/Desktop/React/mastermind/src/board.js\";\nimport React from 'react';\nimport gameRow from './game.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = props => {\n  let rows = [];\n  console.log(props.state);\n\n  for (let i = 0; i < props.state.totalRows; i++) {\n    rows.push( /*#__PURE__*/_jsxDEV(Row, {\n      id: 'row_' + i,\n      state: props.state,\n      pegAction: props.pegAction,\n      checkAction: props.checkAction\n    }, 'row_' + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}; // export class Board extends React.Component {\n//   render() {\n//     let rows = [];\n//     for (let i = 0; i < this.props.totalRows; i++) {\n//       rows.push(\n//         <Row\n//           key={'row_' + i}\n//           id={'row_' + i}\n//           state={this.props.gameRow}\n//           pegAction={this.props.pegAction}\n//           checkAction={this.props.checkAction} />\n//         )\n//     }\n//     return (\n//       <div className='board'>\n//         {rows}\n//       </div>\n//     )\n//   }\n// }\n\n\n_c = Board;\n\nconst Row = props => {\n  let active = '';\n\n  if (+props.id.substr(4) === props.state.activeRow) {\n    active = 'active';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'row ' + active,\n    id: props.id,\n    children: [/*#__PURE__*/_jsxDEV(Circles, {\n      rowId: props.id,\n      state: props.state,\n      pegAction: props.pegAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OkButton, {\n      state: props.state,\n      rowId: props.id,\n      checkAction: props.checkAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hints, {\n      state: props.state,\n      rowId: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Row;\n\nclass Circles extends React.Component {\n  render() {\n    const rowId = this.props.rowId.substr(4);\n    let Pegs = [];\n\n    for (let i = 0; i < 4; i++) {\n      Pegs.push( /*#__PURE__*/_jsxDEV(Peg, {\n        state: this.props.state,\n        pegAction: this.props.pegAction,\n        pegId: 'p' + rowId + '-' + i\n      }, 'p' + rowId + '-' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circles\",\n      children: [\" \", Pegs, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass Peg extends React.Component {\n  render() {\n    const pegId = +this.props.pegId.substr(this.props.pegId.indexOf('-') + 1);\n    const rowId = +this.props.pegId.substr(1, this.props.pegId.indexOf('-') - 1);\n    let clase = '';\n\n    if (this.props.state.activeRow === rowId) {\n      clase = this.props.state.currentRow[pegId];\n    } else {\n      for (let i in this.props.state.previousRows) {\n        if (+i === +rowId) {\n          clase = this.props.state.previousRows[rowId][pegId];\n        }\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      id: this.props.pegId,\n      className: 'peg ' + clase,\n      onClick: () => this.props.pegAction(this.props.state.activeColor, this.props.pegId)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Hints = props => {\n  let allHints = [];\n  let hintClass = '';\n  const rowId = +props.rowId.substr(4);\n  const hintArr = props.state.hints;\n  const prevHints = props.state.previousHints;\n\n  for (let i = 0; i < hintArr.length; i++) {\n    if (rowId === props.state.activeRow) {\n      hintClass = hintArr[i] === 2 ? 'exact' : hintArr[i] === 1 ? 'partial' : '';\n    } else {\n      for (let j = 0; j < prevHints.length; j++) {\n        if (rowId === j) {\n          hintClass = prevHints[j][i] === 2 ? 'exact' : prevHints[j][i] === 1 ? 'partial' : '';\n        }\n      }\n    }\n\n    allHints.push( /*#__PURE__*/_jsxDEV(CheckBox, {\n      hintClass: hintClass,\n      id: 'h_' + rowId + i\n    }, 'h_' + rowId + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hints\",\n    children: allHints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Hints;\n\nconst CheckBox = props => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: props.hintClass,\n  id: props.id\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 147,\n  columnNumber: 3\n}, this);\n\n_c4 = CheckBox;\n\nconst OkButton = props => {\n  const row = +props.rowId.substr(4);\n  let disabled = 'disabled';\n\n  const doNothing = () => false;\n\n  if (props.state.activeRow === row) {\n    disabled = props.state.canCheck ? '' : 'disabled';\n  }\n\n  const checkAction = disabled === 'disabled' ? doNothing : props.checkAction;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'ok-button ' + disabled,\n    onClick: checkAction,\n    children: \"check\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = OkButton;\nexport default Board;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Hints\");\n$RefreshReg$(_c4, \"CheckBox\");\n$RefreshReg$(_c5, \"OkButton\");","map":{"version":3,"sources":["/Users/aastha/Desktop/React/mastermind/src/board.js"],"names":["React","gameRow","Board","props","rows","console","log","state","i","totalRows","push","pegAction","checkAction","Row","active","id","substr","activeRow","Circles","Component","render","rowId","Pegs","Peg","pegId","indexOf","clase","currentRow","previousRows","activeColor","Hints","allHints","hintClass","hintArr","hints","prevHints","previousHints","length","j","CheckBox","OkButton","row","disabled","doNothing","canCheck"],"mappings":"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","sourcesContent":["import React from 'react'\nimport gameRow from './game.js'\n\nconst Board = (props) => {\n    let rows = [];\n    console.log(props.state);\n    for (let i = 0; i < props.state.totalRows; i++) {\n      rows.push(\n        <Row\n          key={'row_' + i}\n          id={'row_' + i}\n          state={props.state}\n          pegAction={props.pegAction}\n          checkAction={props.checkAction} />\n        )\n    }\n    return (\n      <div className='board'>\n        {rows}\n      </div>\n    );\n}\n\n\n// export class Board extends React.Component {\n//   render() {\n//     let rows = [];\n//     for (let i = 0; i < this.props.totalRows; i++) {\n//       rows.push(\n//         <Row\n//           key={'row_' + i}\n//           id={'row_' + i}\n//           state={this.props.gameRow}\n//           pegAction={this.props.pegAction}\n//           checkAction={this.props.checkAction} />\n//         )\n//     }\n//     return (\n//       <div className='board'>\n//         {rows}\n//       </div>\n//     )\n//   }\n// }\n\n\nconst Row = (props) => {\n  let active = ''\n  if (+props.id.substr(4) === props.state.activeRow) {\n    active = 'active'\n  }\n\n  return (\n    <div className={'row ' + active} id={props.id}>\n      <Circles\n        rowId={props.id}\n        state={props.state}\n        pegAction={props.pegAction} />\n      <OkButton\n        state={props.state}\n        rowId={props.id}\n        checkAction={props.checkAction} />\n      <Hints\n        state={props.state}\n        rowId={props.id} />\n    </div>\n  )\n}\n\nclass Circles extends React.Component {\n  render() {\n    const rowId = this.props.rowId.substr(4)\n    let Pegs = []\n    for (let i = 0; i < 4; i++) {\n      Pegs.push(\n        <Peg\n          state={this.props.state}\n          pegAction={this.props.pegAction}\n          key={'p' + rowId + '-' + i}\n          pegId={'p' + rowId + '-' + i} />)\n    }\n\n    return <div className='circles'> {Pegs} </div>\n  }\n}\n\n\nclass Peg extends React.Component {\n  render() {\n    const pegId = +this.props.pegId.substr(this.props.pegId.indexOf('-') + 1)\n    const rowId = +this.props.pegId.substr(1, this.props.pegId.indexOf('-') - 1)\n    let clase = ''\n    if (this.props.state.activeRow === rowId) {\n      clase = this.props.state.currentRow[pegId]\n    } else {\n      for (let i in this.props.state.previousRows) {\n        if (+i === +rowId) {\n          clase = this.props.state.previousRows[rowId][pegId]\n        }\n      }\n    }\n\n    return (\n      <span\n        id={this.props.pegId}\n        className={'peg ' + clase}\n        onClick={() =>\n          this.props.pegAction(this.props.state.activeColor, this.props.pegId)} >\n      </span>\n    )\n  }\n}\n\nconst Hints = (props) => {\n  let allHints = []\n  let hintClass = ''\n  const rowId = +props.rowId.substr(4)\n  const hintArr = props.state.hints\n  const prevHints = props.state.previousHints\n\n  for (let i = 0; i < hintArr.length; i++) {\n    if (rowId === props.state.activeRow) {\n      hintClass = hintArr[i] === 2 ? 'exact' : (hintArr[i] === 1 ? 'partial' : '')\n    } else {\n      for (let j = 0; j < prevHints.length; j++) {\n        if (rowId === j) {\n          hintClass = prevHints[j][i] === 2 ? 'exact' : (prevHints[j][i] === 1 ? 'partial' : '')\n        }\n      }\n    }\n\n    allHints.push(\n      <CheckBox\n        hintClass={hintClass}\n        key={'h_' + rowId + i}\n        id={'h_' + rowId + i} />\n    )\n  }\n  return (\n    <div className='hints'>\n      {allHints}\n    </div>\n  )\n}\n\nconst CheckBox = (props) => (\n  <span\n    className={props.hintClass}\n    id={props.id}>\n  </span>\n)\n\nconst OkButton = (props) => {\n  const row = +props.rowId.substr(4)\n  let disabled = 'disabled'\n  const doNothing = () => (false)\n\n  if (props.state.activeRow === row) {\n    disabled = props.state.canCheck ? '' : 'disabled'\n  }\n  const checkAction = disabled === 'disabled' ? doNothing : props.checkAction\n\n  return (\n    <div\n      className={'ok-button ' + disabled}\n      onClick={checkAction}>\n      check\n    </div>\n  )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}