{"ast":null,"code":"var _jsxFileName = \"/Users/aastha/Desktop/React/mastermind/src/solution.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Solution = props => {\n  let solutionPegs = [];\n  let solutionClass = '';\n  const isHidden = props.state.defeat && !props.state.victory ? '' : ' hidden';\n  const playAgain = !props.state.defeat && props.state.victory ? '' : ' hidden';\n\n  for (let i = 0; i < props.state.code.length; i++) {\n    solutionClass = props.state.code[i];\n    solutionPegs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'color-holder ' + solutionClass //key={'s_' + i}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solution colors\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: isHidden,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Solution:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), solutionPegs]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: playAgain,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: props.newGame,\n        children: \" Play Again?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}; // const Solution = (props) => {\n//   let solutionPegs = []\n//   let solutionClass = ''\n//   const isHidden = (props.state.defeat && !props.state.victory) ? '' : ' hidden'\n//   const playAgain = (!props.state.defeat && props.state.victory) ? '' : ' hidden' \n//   for (let i = 0; i < props.state.code.length; i++) {\n//     solutionClass = props.state.code[i]\n//     solutionPegs.push(\n//       <div\n//         className={'color-holder ' + solutionClass}\n//         key={'s_' + i}>\n//       </div>)\n//   }\n//   return (\n//     <div className='solution colors'>\n//       <div className={isHidden}>\n//         <p>Solution:</p>\n//         {solutionPegs}\n//       </div>\n//       <div className={playAgain}>\n//         <a onClick={props.newGame}> Play Again?</a>\n//       </div>\n//     </div>\n//   )\n// }\n// export default Solution;\n\n_c = Solution;\n\nvar _c;\n\n$RefreshReg$(_c, \"Solution\");","map":{"version":3,"sources":["/Users/aastha/Desktop/React/mastermind/src/solution.js"],"names":["React","Solution","props","solutionPegs","solutionClass","isHidden","state","defeat","victory","playAgain","i","code","length","push","newGame"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACjC,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAIH,KAAK,CAACI,KAAN,CAAYC,MAAZ,IAAsB,CAACL,KAAK,CAACI,KAAN,CAAYE,OAApC,GAA+C,EAA/C,GAAoD,SAArE;AACA,QAAMC,SAAS,GAAI,CAACP,KAAK,CAACI,KAAN,CAAYC,MAAb,IAAuBL,KAAK,CAACI,KAAN,CAAYE,OAApC,GAA+C,EAA/C,GAAoD,SAAtE;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACI,KAAN,CAAYK,IAAZ,CAAiBC,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAChDN,IAAAA,aAAa,GAAGF,KAAK,CAACI,KAAN,CAAYK,IAAZ,CAAiBD,CAAjB,CAAhB;AACAP,IAAAA,YAAY,CAACU,IAAb,eACE;AACE,MAAA,SAAS,EAAE,kBAAkBT,aAD/B,CAEE;;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEC,QAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEM,SAAhB;AAAA,6BACE;AAAG,QAAA,OAAO,EAAEP,KAAK,CAACY,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzBM,C,CA2BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;KArDab,Q","sourcesContent":["import React from 'react';\n\nexport const Solution = (props) => {\n  let solutionPegs = []\n  let solutionClass = ''\n  const isHidden = (props.state.defeat && !props.state.victory) ? '' : ' hidden'\n  const playAgain = (!props.state.defeat && props.state.victory) ? '' : ' hidden' \n  for (let i = 0; i < props.state.code.length; i++) {\n    solutionClass = props.state.code[i]\n    solutionPegs.push(\n      <div\n        className={'color-holder ' + solutionClass}\n        //key={'s_' + i}\n      >\n      </div>)\n  }\n  return (\n    <div className='solution colors'>\n      <div className={isHidden}>\n        <p>Solution:</p>\n        {solutionPegs}\n      </div>\n      <div className={playAgain}>\n        <a onClick={props.newGame}> Play Again?</a>\n      </div>\n    </div>\n  )\n}\n\n// const Solution = (props) => {\n//   let solutionPegs = []\n//   let solutionClass = ''\n//   const isHidden = (props.state.defeat && !props.state.victory) ? '' : ' hidden'\n//   const playAgain = (!props.state.defeat && props.state.victory) ? '' : ' hidden' \n//   for (let i = 0; i < props.state.code.length; i++) {\n//     solutionClass = props.state.code[i]\n//     solutionPegs.push(\n//       <div\n//         className={'color-holder ' + solutionClass}\n//         key={'s_' + i}>\n//       </div>)\n//   }\n//   return (\n//     <div className='solution colors'>\n//       <div className={isHidden}>\n//         <p>Solution:</p>\n//         {solutionPegs}\n//       </div>\n//       <div className={playAgain}>\n//         <a onClick={props.newGame}> Play Again?</a>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default Solution;"]},"metadata":{},"sourceType":"module"}