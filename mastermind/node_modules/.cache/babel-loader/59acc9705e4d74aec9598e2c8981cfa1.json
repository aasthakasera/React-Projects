{"ast":null,"code":"var _jsxFileName = \"/Users/aastha/Desktop/React/mastermind/src/board.js\";\nimport React from 'react';\nimport Circles from './circles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = props => {\n  let rows = [];\n  console.log(props.state.totalRows);\n  console.log(props.state.activeRowIndex);\n\n  for (let i = 0; i < props.state.totalRows; i++) {\n    rows.push( /*#__PURE__*/_jsxDEV(Row //key={'row_' + i}\n    , {\n      id: 'row_' + i,\n      state: props.state,\n      pegAction: props.pegAction,\n      checkAction: props.checkAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Board;\n\nconst Row = props => {\n  let active = '';\n\n  if (+props.id.substr(4) === props.state.activeRowIndex) {\n    active = 'active';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'row ' + active,\n    id: props.id,\n    children: [/*#__PURE__*/_jsxDEV(Circles, {\n      rowId: props.id,\n      state: props.state,\n      pegAction: props.pegAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OkButton, {\n      state: props.state,\n      rowId: props.id,\n      checkAction: props.checkAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hints, {\n      state: props.state,\n      rowId: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Row;\n\nconst Hints = props => {\n  let allHints = [];\n  let hintClass = '';\n  const rowId = +props.rowId.substr(4);\n  const hintArr = props.state.feedback;\n  const prevHints = props.state.previousFeedback;\n\n  for (let i = 0; i < hintArr.length; i++) {\n    if (rowId === props.state.activeRowIndex) {\n      hintClass = hintArr[i] === 2 ? 'exact' : hintArr[i] === 1 ? 'partial' : '';\n    } else {\n      for (let j = 0; j < prevHints.length; j++) {\n        if (rowId === j) {\n          hintClass = prevHints[j][i] === 2 ? 'exact' : prevHints[j][i] === 1 ? 'partial' : '';\n        }\n      }\n    }\n\n    allHints.push( /*#__PURE__*/_jsxDEV(CheckBox, {\n      hintClass: hintClass //key={'h_' + rowId + i}\n      ,\n      id: 'h_' + rowId + i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hints\",\n    children: allHints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Hints;\n\nconst CheckBox = props => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: props.hintClass,\n  id: props.id\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 82,\n  columnNumber: 3\n}, this);\n\n_c4 = CheckBox;\n\nconst OkButton = props => {\n  const row = +props.rowId.substr(4);\n  let disabled = 'disabled';\n\n  const doNothing = () => false;\n\n  if (props.state.activeRowIndex === row) {\n    disabled = props.state.canCheck ? '' : 'disabled';\n  }\n\n  const checkAction = disabled === 'disabled' ? doNothing : props.checkAction;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'ok-button ' + disabled,\n    onClick: checkAction,\n    children: \"check\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = OkButton;\nexport default Board;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Hints\");\n$RefreshReg$(_c4, \"CheckBox\");\n$RefreshReg$(_c5, \"OkButton\");","map":{"version":3,"sources":["/Users/aastha/Desktop/React/mastermind/src/board.js"],"names":["React","Circles","Board","props","rows","console","log","state","totalRows","activeRowIndex","i","push","pegAction","checkAction","Row","active","id","substr","Hints","allHints","hintClass","rowId","hintArr","feedback","prevHints","previousFeedback","length","j","CheckBox","OkButton","row","disabled","doNothing","canCheck"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Circles from './circles';\n\nconst Board = (props) => {\n    let rows = [];\n    console.log(props.state.totalRows);\n    console.log(props.state.activeRowIndex)\n    for (let i = 0; i < props.state.totalRows; i++) {\n      rows.push(\n        <Row\n          //key={'row_' + i}\n          id={'row_' + i}\n          state={props.state}\n          pegAction={props.pegAction}\n          checkAction={props.checkAction} />\n        )\n    }\n    return (\n      <div className='board'>\n        {rows}\n      </div>\n    );\n}\n\n\nconst Row = (props) => {\n  let active = ''\n  if (+props.id.substr(4) === props.state.activeRowIndex) {\n    active = 'active'\n  }\n\n  return (\n    <div className={'row ' + active} id={props.id}>\n      <Circles\n        rowId={props.id}\n        state={props.state}\n        pegAction={props.pegAction} />\n      <OkButton\n        state={props.state}\n        rowId={props.id}\n        checkAction={props.checkAction} />\n      <Hints\n        state={props.state}\n        rowId={props.id} />\n    </div>\n  )\n}\n\nconst Hints = (props) => {\n  let allHints = []\n  let hintClass = ''\n  const rowId = +props.rowId.substr(4)\n  const hintArr = props.state.feedback\n  const prevHints = props.state.previousFeedback\n\n  for (let i = 0; i < hintArr.length; i++) {\n    if (rowId === props.state.activeRowIndex) {\n      hintClass = hintArr[i] === 2 ? 'exact' : (hintArr[i] === 1 ? 'partial' : '')\n    } else {\n      for (let j = 0; j < prevHints.length; j++) {\n        if (rowId === j) {\n          hintClass = prevHints[j][i] === 2 ? 'exact' : (prevHints[j][i] === 1 ? 'partial' : '')\n        }\n      }\n    }\n\n    allHints.push(\n      <CheckBox\n        hintClass={hintClass}\n        //key={'h_' + rowId + i}\n        id={'h_' + rowId + i} />\n    )\n  }\n  return (\n    <div className='hints'>\n      {allHints}\n    </div>\n  )\n}\n\nconst CheckBox = (props) => (\n  <span\n    className={props.hintClass}\n    id={props.id}>\n  </span>\n)\n\nconst OkButton = (props) => {\n  const row = +props.rowId.substr(4)\n  let disabled = 'disabled'\n  const doNothing = () => (false)\n\n  if (props.state.activeRowIndex === row) {\n    disabled = props.state.canCheck ? '' : 'disabled'\n  }\n  const checkAction = disabled === 'disabled' ? doNothing : props.checkAction\n\n  return (\n    <div\n      className={'ok-button ' + disabled}\n      onClick={checkAction}>\n      check\n    </div>\n  )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}