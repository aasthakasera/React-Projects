{"ast":null,"code":"var _jsxFileName = \"/Users/aastha/Desktop/React/mastermind/src/peg.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Peg = props => {\n  const pegId = +props.pegId.substr(this.props.pegId.indexOf('-') + 1);\n  const rowId = +props.pegId.substr(1, this.props.pegId.indexOf('-') - 1);\n  let clase = '';\n\n  if (props.state.activeRowIndex === rowId) {\n    clase = props.state.currentRow[pegId];\n  } else {\n    for (let i in props.state.previousRows) {\n      if (+i === +rowId) {\n        clase = props.state.previousRows[rowId][pegId];\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: this.props.pegId,\n    className: 'peg ' + clase,\n    onClick: () => this.props.pegAction(this.props.state.activeColor, this.props.pegId)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}; // const Peg = (props) => {\n//     const pegId = +props.pegId.substr(props.pegId.indexOf(\"-\") + 1);\n//     const rowId = +props.pegId.substr(1, props.pegId.indexOf(\"-\") - 1);\n//     let clase = \"\";\n//     if (props.state.activeRowIndex === rowId) {\n//         clase = props.state.currentRow[pegId];\n//         console.log(\"clase\");\n//         console.log(clase);\n//     } else {\n//         for (let i in props.state.previousRows) {\n//           if (+i === +rowId) {\n//             clase = props.state.previousRows[rowId][pegId];\n//           }\n//         }\n//       }\n//       console.log(props.state.activeColor);\n//     //   return (\n//     //     <div\n//     //         id={props.pegId}\n//     //         className={\"peg\" + clase}\n//     //         //key={color}\n//     //         onClick={() => { props.pegAction(props.state.activeColor, props.pegId) }} >\n//     //     </div>\n//     //   );\n//     //   return <div className=\"colors\">{allColors}</div>;\n//       return (\n//         <span\n//           id={props.pegId}\n//           className={\"peg \" + clase}\n//           onClick={() =>\n//             props.pegAction(props.state.activeColor, props.pegId)\n//           }\n//         >\n//         </span>\n//       );\n//   }\n\n\n_c = Peg;\nexport default Peg;\n\nvar _c;\n\n$RefreshReg$(_c, \"Peg\");","map":{"version":3,"sources":["/Users/aastha/Desktop/React/mastermind/src/peg.js"],"names":["React","Peg","props","pegId","substr","indexOf","rowId","clase","state","activeRowIndex","currentRow","i","previousRows","pegAction","activeColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnB,QAAMC,KAAK,GAAG,CAACD,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmB,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,OAAjB,CAAyB,GAAzB,IAAgC,CAAnD,CAAf;AACA,QAAMC,KAAK,GAAG,CAACJ,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,EAAsB,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,OAAjB,CAAyB,GAAzB,IAAgC,CAAtD,CAAf;AACA,MAAIE,KAAK,GAAG,EAAZ;;AACA,MAAIL,KAAK,CAACM,KAAN,CAAYC,cAAZ,KAA+BH,KAAnC,EAA0C;AACxCC,IAAAA,KAAK,GAAGL,KAAK,CAACM,KAAN,CAAYE,UAAZ,CAAuBP,KAAvB,CAAR;AACD,GAFD,MAEO;AACL,SAAK,IAAIQ,CAAT,IAAcT,KAAK,CAACM,KAAN,CAAYI,YAA1B,EAAwC;AACtC,UAAI,CAACD,CAAD,KAAO,CAACL,KAAZ,EAAmB;AACjBC,QAAAA,KAAK,GAAGL,KAAK,CAACM,KAAN,CAAYI,YAAZ,CAAyBN,KAAzB,EAAgCH,KAAhC,CAAR;AACD;AACF;AACF;;AAED,sBACE;AACE,IAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,KADjB;AAEE,IAAA,SAAS,EAAE,SAASI,KAFtB;AAGE,IAAA,OAAO,EAAE,MACP,KAAKL,KAAL,CAAWW,SAAX,CAAqB,KAAKX,KAAL,CAAWM,KAAX,CAAiBM,WAAtC,EAAmD,KAAKZ,KAAL,CAAWC,KAA9D;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQH,CAtBD,C,CAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA5DMF,G;AA8DN,eAAeA,GAAf","sourcesContent":["import React from 'react';\n\nconst Peg = (props) => {\n    const pegId = +props.pegId.substr(this.props.pegId.indexOf('-') + 1)\n    const rowId = +props.pegId.substr(1, this.props.pegId.indexOf('-') - 1)\n    let clase = ''\n    if (props.state.activeRowIndex === rowId) {\n      clase = props.state.currentRow[pegId]\n    } else {\n      for (let i in props.state.previousRows) {\n        if (+i === +rowId) {\n          clase = props.state.previousRows[rowId][pegId]\n        }\n      }\n    }\n\n    return (\n      <span\n        id={this.props.pegId}\n        className={'peg ' + clase}\n        onClick={() =>\n          this.props.pegAction(this.props.state.activeColor, this.props.pegId)} >\n      </span>\n    )\n}\n\n// const Peg = (props) => {\n//     const pegId = +props.pegId.substr(props.pegId.indexOf(\"-\") + 1);\n//     const rowId = +props.pegId.substr(1, props.pegId.indexOf(\"-\") - 1);\n//     let clase = \"\";\n//     if (props.state.activeRowIndex === rowId) {\n//         clase = props.state.currentRow[pegId];\n//         console.log(\"clase\");\n//         console.log(clase);\n//     } else {\n//         for (let i in props.state.previousRows) {\n//           if (+i === +rowId) {\n//             clase = props.state.previousRows[rowId][pegId];\n//           }\n//         }\n//       }\n//       console.log(props.state.activeColor);\n//     //   return (\n//     //     <div\n//     //         id={props.pegId}\n//     //         className={\"peg\" + clase}\n//     //         //key={color}\n//     //         onClick={() => { props.pegAction(props.state.activeColor, props.pegId) }} >\n//     //     </div>\n//     //   );\n\n//     //   return <div className=\"colors\">{allColors}</div>;\n//       return (\n//         <span\n//           id={props.pegId}\n//           className={\"peg \" + clase}\n//           onClick={() =>\n//             props.pegAction(props.state.activeColor, props.pegId)\n//           }\n//         >\n//         </span>\n//       );\n//   }\n\nexport default Peg;"]},"metadata":{},"sourceType":"module"}